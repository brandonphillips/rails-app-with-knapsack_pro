# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    parallelism: 4
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.0-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: rails-app-with-knapsack_pro
          RAILS_ENV: test
          RACK_ENV: test
          KNAPSACK_PRO_REPO_PATH: ~/gems/knapsack_pro-ruby

          # In production you should use endpoint https://api.knapsackpro.com
          # which is default so it means you don't need to set KNAPSACK_PRO_ENDPOINT
          # Below endpoint is just for internal tests by KnapsackPro developers.
          KNAPSACK_PRO_ENDPOINT: https://api-staging.knapsackpro.com

          # Tokens are set in CircleCI settings so you can't read them from this file.
          # KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC: rspec-token
          # KNAPSACK_PRO_TEST_SUITE_TOKEN_CUCUMBER: cucumber-token
          # KNAPSACK_PRO_TEST_SUITE_TOKEN_MINITEST: minitest-token
          # KNAPSACK_PRO_TEST_SUITE_TOKEN_SPINACH: spinach-token

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.4.12-alpine
        environment:
          POSTGRES_DB: rails-app-with-knapsack_pro_test
          POSTGRES_PASSWORD: ""
          POSTGRES_USER: rails-app-with-knapsack_pro

    working_directory: ~/repo

    steps:
      - checkout

      - run: mkdir ~/gems
      - run: cd ~/gems && (git clone -b $CIRCLE_BRANCH --single-branch git@github.com:KnapsackPro/knapsack_pro-ruby.git || git clone -b master --single-branch git@github.com:KnapsackPro/knapsack_pro-ruby.git)
      - run: cd ~/gems/knapsack_pro-ruby && git branch
      - run: cd ~/gems/knapsack_pro-ruby && git log -n 1 | more
      - run: mkdir -p tmp/test-reports/rspec/regular_mode/
      - run: mkdir -p tmp/test-reports/rspec/queue_mode/
      - run: mkdir -p tmp/test-reports/cucumber/regular_mode/

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-bundler-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-bundler-

      - run:
          name: install ruby dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-bundler-{{ checksum "Gemfile.lock" }}

      # wait for postgres to be available
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      # Database setup
      - run: bin/rails db:setup
      # Database setup for parallel_tests gem
      - run: TEST_ENV_NUMBER=2 bin/rails db:setup

      - run: cd bin/api_test && rspec queue
